///   ***   ---   |||         In the name of VOGOBAN        |||   ---   ***   ///

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef pair<int,int> pii;

#define endl '\n'
#define PB push_back
#define F first
#define S second
#define all(a) (a).begin(),(a).end()
#define rall(a) (a).rbegin(),(a).rend()

#define MOD 1000000007

#define mem(a,b) memset(a, b, sizeof(a) )
#define sqr(a) ((a) * (a))

#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);


ll gcd ( ll a, ll b )
{ 
    return __gcd ( a, b );
}
ll lcm ( ll a, ll b )
{
    return a * ( b / gcd ( a, b ) );
}

const int N = 1e5 + 123;
vector<int > graph[N];
bool vis[N];
int cnt = 0;

bool DFS( int vertex ,int parent )
{
    vis[vertex] = true;
    bool isloop_exist = false;
    for ( auto child: graph[vertex] )
    {
        if ( vis[child] && parent == child )continue;
        if ( vis[child] )
        {
            cnt++;
            return true;
        }

        isloop_exist |= DFS(child, vertex );
    }
    return isloop_exist;
}

int main()
{
    optimize();

        int n, e;
        cin >> n >> e;
        bool isloop_exist = false;
        for ( int i = 0; i < e; i++ )
        {
            int vertex, edges;
            cin >> vertex >> edges;

            graph[vertex].PB(edges);
            graph[edges].PB(vertex);
        }

        for ( int j = 0; j <= n; j++ )
        {
            if ( vis[j] )continue;

            if ( DFS(j,0) )
            {
                isloop_exist = true;
            }
        }

        if ( isloop_exist )cout << "YES " << cnt << endl;
        else cout << "NO" << endl;

    return 0;
}
