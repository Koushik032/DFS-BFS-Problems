///   ***   ---   |||         In the name of VOGOBAN        |||   ---   ***   ///

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef pair<int,int> pii;

#define endl '\n'
#define PB push_back
#define F first
#define S second
#define all(a) (a).begin(),(a).end()
#define rall(a) (a).rbegin(),(a).rend()

#define MOD 1000000007

#define mem(a,b) memset(a, b, sizeof(a) )
#define sqr(a) ((a) * (a))

#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);


ll gcd ( ll a, ll b )
{ 
    return __gcd ( a, b );
}
ll lcm ( ll a, ll b )
{
    return a * ( b / gcd ( a, b ) );
}

const int N = 2e5 + 123;
vector<int > graph[N];
bool vis[N];
vector<int> ans;

void DFS( int vertex )
{
    vis[vertex] = true;
    for ( auto child: graph[vertex] )
    {
        if ( vis[child] )continue;
        DFS(child);
    }
}

int main()
{
    optimize();

        int n, e;
        cin >> n >> e ;

        for ( int i = 0; i < e; i++ )
        {
            int x, y;
            cin >> x >> y;
            graph[x].PB(y);
            graph[y].PB(x);
        }
        
        DFS(1);
        bool done = false;

        for ( int i = 1; i <= n; i++ )
        {
            if ( !vis[i] )
            {
                ans.PB(i);
                done = true;
            }
        }

        if ( !done )
        {
            cout << "Connected" << endl;
        }
        else
        {
            for ( auto u : ans )
            {
                cout << u << endl;
            }
        }
    return 0;
}
